{"version":3,"sources":["views/home.js","views/about.js","services/boardService.js","components/rate.js","components/boardGameItem.js","views/boardgames.js","components/counter.js","components/beer.js","views/beers.js","services/beerService.js","components/header.js","components/footer.js","app.js","index.js"],"names":["Home","About","allBoardGames","name","rate","url","imgUrl","Rate","props","className","onClick","updateRate","BoardGameItem","src","alt","href","BoardGames","state","Promise","resolve","rejected","setTimeout","then","games","setState","this","length","allBoardGameComponents","map","game","i","key","React","Component","Counter","drink","count","Beer","val","oldRate","addCount","oldCont","ibu","Beers","allBeers","fetch","response","json","beers","allComponents","beer","index","IBU","imgSrc","Header","to","Footer","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"6PAMeA,EAJF,WACX,OAAO,2DCGMC,EAJD,WACZ,OAAO,8CCHHC,EAAgB,CACpB,CACEC,KAAM,oBACNC,KAAM,IACNC,IACE,4FACFC,OACE,oFAEJ,CACEH,KAAM,0BACNC,KAAM,EACNC,IACE,0EACFC,OACE,mFCbN,IAUeC,EAVF,SAAAC,GACX,OACE,yBAAKC,UAAU,kBACb,4BAAQC,QAAS,kBAAMF,EAAMG,YAAY,MAAzC,KACA,yCAAeH,EAAMJ,MACrB,4BAAQM,QAAS,kBAAMF,EAAMG,WAAW,MAAxC,OCOSC,EAXO,SAAAJ,GACpB,OACE,iCACE,4BAAKA,EAAML,MACX,yBAAKU,IAAKL,EAAMF,OAAQQ,IAAI,eAC5B,uBAAGC,KAAMP,EAAMH,KAAf,gBACA,kBAAC,EAAD,CAAMD,KAAMI,EAAMJ,SCLHY,E,YACnB,WAAYR,GAAQ,IAAD,8BACjB,4CAAMA,KAEDS,MAAQ,CAAEf,cAAe,IAHb,E,iFAOE,IAAD,OHQJ,IAAIgB,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACTF,EAAQjB,KACP,QGTgBoB,MAAK,SAAAC,GAEtB,EAAKC,SAAS,CACZtB,cAAeqB,S,+BAOnB,GAAwC,IAApCE,KAAKR,MAAMf,cAAcwB,OAC3B,OAAO,0CAIT,IAAMC,EAAyBF,KAAKR,MAAMf,cAAc0B,KAAI,SAACC,EAAMC,GACjE,OACE,kBAAC,EAAD,CACE3B,KAAM0B,EAAK1B,KACXC,KAAMyB,EAAKzB,KACXC,IAAKwB,EAAKxB,IACVC,OAAQuB,EAAKvB,OACbyB,IAAKD,EAAI,YAMf,OAAO,iCAAUH,O,GAtCmBK,IAAMC,WCS/BC,E,iLATX,OACE,yBAAKzB,UAAU,qBACb,4BAAQC,QAASe,KAAKjB,MAAM2B,OAA5B,cACA,yCAAeV,KAAKjB,MAAM4B,Y,GALZH,aCGDI,E,YACnB,WAAY7B,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRG,WAAa,SAAA2B,GACX,IAAIC,EAAU,EAAKtB,MAAMb,KACzBmC,GAAWD,EACX,EAAKd,SAAS,CAAEpB,KAAMmC,KAvBL,EA0BnBC,SAAW,WACT,IAAIC,EAAU,EAAKxB,MAAMmB,MACzBK,GAAW,EACX,EAAKjB,SAAS,CAAEY,MAAOK,KA3BvB,EAAKxB,MAAQ,CAAEmB,MAAO,EAAGhC,KAAM,GAFd,E,sEAKT,IAAD,EACoBqB,KAAKjB,MAAxBL,EADD,EACCA,KAAMuC,EADP,EACOA,IAAKrC,EADZ,EACYA,IACnB,OACE,6BAASI,UAAU,QACjB,6BACE,yBAAKI,IAAKR,EAAKS,IAAI,WAAWJ,QAASe,KAAKe,YAE9C,4BAAKrC,GACL,oCAAUuC,GACV,kBAAC,EAAD,CAASN,MAAOX,KAAKR,MAAMmB,MAAOD,MAAOV,KAAKe,WAC9C,kBAAC,EAAD,CAAMpC,KAAMqB,KAAKR,MAAMb,KAAMO,WAAYc,KAAKd,kB,GAhBpBqB,IAAMC,W,ICDnBU,E,YACnB,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDS,MAAQ,CAAE2B,SAAU,IAHR,E,iFAOE,IAAD,OCRbC,MAHP,oEAGuBvB,MAAK,SAAAwB,GAC1B,OAAOA,EAASC,UDSFzB,MAAK,SAAA0B,GAEjB,EAAKxB,SAAS,CAAEoB,SAAUI,S,+BAM5B,GAAmC,IAA/BvB,KAAKR,MAAM2B,SAASlB,OACtB,OAAO,0CAIT,IAAMuB,EAAgBxB,KAAKR,MAAM2B,SAAShB,KAAI,SAACsB,EAAMC,GACnD,OACE,kBAAC,EAAD,CAAMhD,KAAM+C,EAAK/C,KAAMuC,IAAKQ,EAAKE,IAAK/C,IAAK6C,EAAKG,OAAQtB,IAAKoB,EAAM,sBAKvE,OAAO,iCAAUF,O,GA9BcjB,IAAMC,WEiB1BqB,EAlBA,WACb,OACE,gCACE,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,YCCOC,EATA,WACb,OACE,gCACE,6DC8BSC,E,iLAtBX,OAEE,kBAAC,IAAD,KAEE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5D,IACjC,kBAAC,IAAD,CAAO2D,KAAK,SAASC,UAAW3D,IAChC,kBAAC,IAAD,CAAO0D,KAAK,SAASC,UAAW5C,IAChC,kBAAC,IAAD,CAAO2C,KAAK,SAASC,UAAWjB,KAIlC,kBAAC,EAAD,W,GAlBUX,IAAMC,WCLxB4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2301f81d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return <h1>Witaj na naszej stronie!!!</h1>;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return <h3>About: super!</h3>;\r\n};\r\n\r\nexport default About;\r\n","const allBoardGames = [\r\n  {\r\n    name: \"Wybuchajace kotki\",\r\n    rate: 9.9,\r\n    url:\r\n      \"https://www.empik.com/rebel-gra-towarzyska-eksplodujace-kotki-rebel,p1163282331,zabawki-p\",\r\n    imgUrl:\r\n      \"https://ecsmedia.pl/c/rebel-gra-towarzyska-eksplodujace-kotki-w-iext51126317.jpg\"\r\n  },\r\n  {\r\n    name: \"Znak starszych bogów\",\r\n    rate: 8,\r\n    url:\r\n      \"https://www.rebel.pl/product.php/1,1010/22968/Znak-Starszych-Bogow.html\",\r\n    imgUrl:\r\n      \"https://image.ceneostatic.pl/data/products/15466279/i-znak-starszych-bogow.jpg\"\r\n  }\r\n];\r\n\r\nexport function getAllBoardGames() {\r\n  const promise = new Promise((resolve, rejected) => {\r\n    setTimeout(() => {\r\n      resolve(allBoardGames);\r\n    }, 3000);\r\n  });\r\n\r\n  return promise;\r\n}\r\n","import React from \"react\";\r\n\r\nconst Rate = props => {\r\n  return (\r\n    <div className=\"rate-component\">\r\n      <button onClick={() => props.updateRate(-0.5)}>-</button>\r\n      <span>Rate is {props.rate}</span>\r\n      <button onClick={() => props.updateRate(0.5)}>+</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rate;\r\n","import React from \"react\";\r\nimport Rate from \"./rate\";\r\n\r\nconst BoardGameItem = props => {\r\n  return (\r\n    <section>\r\n      <h3>{props.name}</h3>\r\n      <img src={props.imgUrl} alt=\"planszowka\" />\r\n      <a href={props.url}>Kup teraz!!!</a>\r\n      <Rate rate={props.rate} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BoardGameItem;\r\n","import React from \"react\";\r\nimport { getAllBoardGames } from \"../services/boardService\";\r\nimport BoardGameItem from \"../components/boardGameItem\";\r\n\r\nexport default class BoardGames extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Tworzymy sobie state komponentu w którym będziemy przechowywać informacje o wszystkich grach planszowych\r\n    this.state = { allBoardGames: [] };\r\n  }\r\n\r\n  //W momencie gdy nasz komponent zostanie po raz pierwszy wyrenderowany chcemy wysłać zapytanie do serwera o dane\r\n  componentDidMount() {\r\n    //getAllBoardGames - metoda która wysyła zapytanie (jest to mock * w celach testowych udajemy zapytanie do serwera) i zwraca promise\r\n    getAllBoardGames().then(games => {\r\n      //gdy promise będzie fulfilled wrzucamy aktualizujemy state komponentu - dziękie czemu komponent zostanie od nowa wyrenderowany\r\n      this.setState({\r\n        allBoardGames: games\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //jeżeli nie mamy żadnych gier nasz komponent renderuje napis loading\r\n    if (this.state.allBoardGames.length === 0) {\r\n      return <h1>Loading...</h1>;\r\n    }\r\n\r\n    //gdy mamy dane, dla każdego obiektu w tablicy this.state.allBoardGames - generujemy nowy react komponent - BoardGameItem\r\n    const allBoardGameComponents = this.state.allBoardGames.map((game, i) => {\r\n      return (\r\n        <BoardGameItem\r\n          name={game.name}\r\n          rate={game.rate}\r\n          url={game.url}\r\n          imgUrl={game.imgUrl}\r\n          key={i + \"game\"}\r\n        />\r\n      );\r\n    });\r\n\r\n    //Następie renderujemy te wszystkie komponenty wewnątrz article\r\n    return <article>{allBoardGameComponents}</article>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"counter-component\">\r\n        <button onClick={this.props.drink}>Wypij piwo</button>\r\n        <span>Wypite: {this.props.count}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nimport Counter from \"./counter\";\r\nimport Rate from \"./rate\";\r\n\r\nexport default class Beer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { count: 0, rate: 0 };\r\n  }\r\n\r\n  render() {\r\n    const { name, ibu, url } = this.props;\r\n    return (\r\n      <section className=\"beer\">\r\n        <div>\r\n          <img src={url} alt=\"piweczko\" onClick={this.addCount} />\r\n        </div>\r\n        <h2>{name}</h2>\r\n        <h4>IBU: {ibu}</h4>\r\n        <Counter count={this.state.count} drink={this.addCount} />\r\n        <Rate rate={this.state.rate} updateRate={this.updateRate} />\r\n      </section>\r\n    );\r\n  }\r\n\r\n  updateRate = val => {\r\n    let oldRate = this.state.rate;\r\n    oldRate += val;\r\n    this.setState({ rate: oldRate });\r\n  };\r\n\r\n  addCount = () => {\r\n    let oldCont = this.state.count;\r\n    oldCont += 1;\r\n    this.setState({ count: oldCont });\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport Beer from \"../components/beer\";\r\nimport { getAllBeers } from \"../services/beerService\";\r\nexport default class Beers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Tworzymy sobie state komponentu w którym będziemy przechowywać informacje o wszystkich piwach\r\n    this.state = { allBeers: [] };\r\n  }\r\n\r\n  //W momencie gdy nasz komponent zostanie po raz pierwszy wyrenderowany chcemy wysłać zapytanie do serwera o dane\r\n  componentDidMount() {\r\n    // getAllBeers - wysyłamy zapytanie do serwera i czekamy aż promise będzie fulfilled \r\n    getAllBeers().then(beers => {\r\n      //gdy promise będzie fulfilled wrzucamy aktualizujemy state komponentu - dziękie czemu komponent zostanie od nowa wyrenderowany (bo aktualizujemy state)\r\n      this.setState({ allBeers: beers });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //jeżeli nie mamy żadnych piw nasz komponent renderuje napis loading\r\n    if (this.state.allBeers.length === 0) {\r\n      return <h1>Loading...</h1>;\r\n    }\r\n\r\n    //gdy mamy dane, dla każdego obiektu w tablicy this.state.allBeers - generujemy nowy react komponent - Beer - i przekazujemy mu odpowiednie dane\r\n    const allComponents = this.state.allBeers.map((beer, index) => {\r\n      return (\r\n        <Beer name={beer.name} ibu={beer.IBU} url={beer.imgSrc} key={index+'daj-sobie-beer'} />\r\n      );\r\n    });\r\n\r\n    //Następie renderujemy te wszystkie komponenty wewnątrz article\r\n    return <article>{allComponents}</article>;\r\n  }\r\n}\r\n","const BEER_URL =\r\n  \"https://us-central1-irfighters-beer.cloudfunctions.net/api1/beer\";\r\n\r\nexport function getAllBeers() {\r\n  return fetch(BEER_URL).then(response => {\r\n    return response.json();\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"; //Jeżeli robimy odnośniki do naszych podstron używamy komponentu Link dostarczony od react-router-dom\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <nav>\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/about\">About</Link>\r\n        <Link to=\"/games\">Games</Link>\r\n        <Link to=\"/beers\">Beers</Link>\r\n{/* \r\n        <a href=\"/\">Home</a>\r\n        <a href=\"/about\">About</a>\r\n        <a href=\"/games\">Games</a>\r\n        <a href=\"/beers\">Beers</a> */}\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <h3>Wszystkie prawa sa prywatne</h3>\r\n    </footer>\r\n  );\r\n};\r\n\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./views/home\";\r\nimport About from \"./views/about\";\r\nimport BoardGames from \"./views/boardgames\";\r\nimport Beers from \"./views/beers\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\n\r\n//Główny komponent w naszej aplikacji, mamy tutaj definicję routingu naszej strony\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      // BrowserRouter jest to komponent dostarczony od react-router-dom, przy jego pomocy definiujemy jakie mamy podstrony w naszej aplikacji\r\n      <BrowserRouter>\r\n        {/* Header jest to nasz komponentu, który definiuje header naszej strony - jest on taki sam dla kazdej podstrony */}\r\n        <Header />\r\n        {/* Switch - komponent dostarczony przez react-router-dom - sprawia że jeżeli więcej niż jedna nasza podstrona spełni path zostanie wygenerowana tylko jedna */}\r\n        <Switch>\r\n          {/* Route - komponent dostarczony przez react-router-dom - to te fragmenty będą podmieniane gdy będziemy nawigować między podstronami */}\r\n          {/* Route - powinien dostać przynajmniej dwa propsy - path (ściezka url do naszej podstrony) ; component (komponent który będzie wyrenderowany gdy przejdziemy do konkretnego url'a) */}\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/games\" component={BoardGames} />\r\n          <Route path=\"/beers\" component={Beers} />\r\n        </Switch>\r\n\r\n        {/* Footer - nasz komponent - taki sam dla każdej podstrony */}\r\n        <Footer />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/main.css\";\r\n\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}